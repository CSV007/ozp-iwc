var sibilant=sibilant||{};sibilant.util=sibilant.util||{},sibilant.util.generateId=function(){return Math.floor(4294967295*Math.random()).toString(16)},sibilant.util.now=function(){return(new Date).getTime()},sibilant.util.extend=function(a,b){return b.prototype=Object.create(a.prototype),b.prototype.constructor=b,b};var sibilant=sibilant||{};sibilant.metricsStats=sibilant.metricsStats||{},sibilant.metricsStats.DEFAULT_POOL_SIZE=1024,sibilant.metricsStats.Sample=function(){this.clear()},sibilant.metricsStats.Sample.prototype.update=function(a){this.values.push(a)},sibilant.metricsStats.Sample.prototype.clear=function(){this.values=[],this.count=0},sibilant.metricsStats.Sample.prototype.size=function(){return this.values.length},sibilant.metricsStats.Sample.prototype.getValues=function(){return this.values},sibilant.metricsStats.UniformSample=sibilant.util.extend(sibilant.metricsStats.Sample,function(a){sibilant.metricsStats.Sample.apply(this),this.limit=a||sibilant.metricsStats.DEFAULT_POOL_SIZE}),sibilant.metricsStats.UniformSample.prototype.update=function(a){if(this.count++,this.size()<this.limit)this.values.push(a);else{var b=parseInt(Math.random()*this.count);b<this.limit&&(this.values[b]=a)}};var sibilant=sibilant||{};sibilant.metricsStats=sibilant.metricsStats||{},sibilant.metricsStats.BinaryHeap=function(a){this.content=[],this.scoreFunction=a},sibilant.metricsStats.BinaryHeap.prototype={clone:function(){var a=new BinaryHeap(this.scoreFunction);return a.content=JSON.parse(JSON.stringify(this.content)),a},push:function(a){this.content.push(a),this.bubbleUp(this.content.length-1)},peek:function(){return this.content[0]},pop:function(){var a=this.content[0],b=this.content.pop();return this.content.length>0&&(this.content[0]=b,this.sinkDown(0)),a},remove:function(a){for(var b=this.content.length,c=0;b>c;c++)if(this.content[c]==a){var d=this.content.pop();return c!=b-1&&(this.content[c]=d,this.scoreFunction(d)<this.scoreFunction(a)?this.bubbleUp(c):this.sinkDown(c)),!0}throw new Error("Node not found.")},size:function(){return this.content.length},bubbleUp:function(a){for(var b=this.content[a];a>0;){var c=Math.floor((a+1)/2)-1,d=this.content[c];if(!(this.scoreFunction(b)<this.scoreFunction(d)))break;this.content[c]=b,this.content[a]=d,a=c}},sinkDown:function(a){for(var b=this.content.length,c=this.content[a],d=this.scoreFunction(c);;){var e=2*(a+1),f=e-1,g=null;if(b>f){var h=this.content[f],i=this.scoreFunction(h);d>i&&(g=f)}if(b>e){var j=this.content[e],k=this.scoreFunction(j);(null==g?d:i)>k&&(g=e)}if(null==g)break;this.content[a]=this.content[g],this.content[g]=c,a=g}}};var sibilant=sibilant||{};sibilant.metricsStats=sibilant.metricsStats||{},sibilant.metricsStats.DEFAULT_RESCALE_THRESHOLD=36e5,sibilant.metricsStats.DEFAULT_DECAY_ALPHA=1,sibilant.metricsStats.ExponentiallyDecayingSample=sibilant.util.extend(sibilant.metricsStats.Sample,function(a,b){sibilant.metricsStats.Sample.apply(this),this.limit=a||sibilant.metricsStats.DEFAULT_POOL_SIZE,this.alpha=b||sibilant.metricsStats.DEFAULT_DECAY_ALPHA,this.rescaleThreshold=sibilant.metricsStats.DEFAULT_RESCALE_THRESHOLD}),sibilant.metricsStats.ExponentiallyDecayingSample.prototype.getValues=function(){for(var a,b=[],c=this.values.clone();a=c.pop();)b.push(a.val);return b},sibilant.metricsStats.ExponentiallyDecayingSample.prototype.size=function(){return this.values.size()},sibilant.metricsStats.ExponentiallyDecayingSample.prototype.newHeap=function(){return new sibilant.metricsStats.BinaryHeap(function(a){return a.priority})},sibilant.metricsStats.ExponentiallyDecayingSample.prototype.now=function(){return sibilant.util.now()},sibilant.metricsStats.ExponentiallyDecayingSample.prototype.tick=function(){return this.now()/1e3},sibilant.metricsStats.ExponentiallyDecayingSample.prototype.clear=function(){this.values=this.newHeap(),this.count=0,this.startTime=this.tick(),this.nextScaleTime=this.now()+RESCALE_THRESHOLD},sibilant.metricsStats.ExponentiallyDecayingSample.prototype.update=function(a,b){void 0==b?b=this.tick():b/=1e3;var c=this.weight(b-this.startTime)/Math.random(),d={val:a,priority:c};if(this.count<this.limit)this.count+=1,this.values.push(d);else{var e=this.values.peek();e.priority<c&&(this.values.push(d),this.values.pop())}this.now()>this.nextScaleTime&&this.rescale()},sibilant.metricsStats.ExponentiallyDecayingSample.prototype.weight=function(a){return Math.exp(this.alpha*a)},sibilant.metricsStats.ExponentiallyDecayingSample.prototype.rescale=function(){this.nextScaleTime=this.now()+this.rescaleThreshold;var a=this.values.content,b=[],c=this.startTime;this.startTime=this.tick();for(var d=0;d<a.length;d++)b.push({val:a[d].val,priority:a[d].priority*Math.exp(-this.alpha*(this.startTime-c))});this.values.content=b};var sibilant=sibilant||{};sibilant.metricTypes=sibilant.metricTypes||{},sibilant.metricTypes.Counter=function(){this.value=0},sibilant.metricTypes.Counter.prototype.get=function(){return this.value},sibilant.metricTypes.Counter.prototype.inc=function(a){return this.value+=a?a:1},sibilant.metricTypes.Counter.prototype.dec=function(a){return this.value-=a?a:1},sibilant.metricTypes.Meter=function(){this.value=0},sibilant.metricTypes.Meter.prototype.set=function(a){return this.value=a,this},sibilant.metricTypes.Meter.prototype.get=function(){return this.value},sibilant.metricTypes.Gauge=function(a){this.callback=a},sibilant.metricTypes.Gauge.prototype.set=function(a){return callback=a,this},sibilant.metricTypes.Gauge.prototype.get=function(){return callback()},sibilant.MetricsRegistry=function(){this.metrics={}},sibilant.MetricsRegistry.prototype.findOrCreateMetric=function(a,b){var c=this.metrics[a]=this.metrics[a]||new b;return c instanceof b?c:null},sibilant.MetricsRegistry.prototype.makeName=function(a){return Array.prototype.slice.call(a).join(".")},sibilant.MetricsRegistry.prototype.counter=function(){return this.findOrCreateMetric(this.makeName(arguments),sibilant.metricTypes.Counter)},sibilant.MetricsRegistry.prototype.meter=function(){return this.findOrCreateMetric(this.makeName(arguments),sibilant.metricTypes.Meter)},sibilant.MetricsRegistry.prototype.gauge=function(){return this.findOrCreateMetric(this.makeName(arguments),sibilant.metricTypes.Gauge)},sibilant.MetricsRegistry.prototype.toJson=function(){var a={};for(var b in this.metrics){for(var c=b.split("."),d=a;c.length>1;){var e=c.shift();d=d[e]=d[e]||{}}d[c[0]]=this.metrics[b].get()}return a},sibilant.metrics=new sibilant.MetricsRegistry;